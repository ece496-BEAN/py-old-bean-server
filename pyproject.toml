[tool.ruff]
target-version = "py312"
include = ["beanserver/**/*.py"]
line-length = 140

[tool.ruff.lint]
ignore = [
    "RUF001", # ruff-specific rules ambiguous-unicode-character-string
    "S101", # flake8-bandit assert
    "S308", # flake8-bandit suspicious-mark-safe-usage
    "S603", # flake8-bandit subprocess-without-shell-equals-true
    "S607", # flake8-bandit start-process-with-partial-path
    "E501", # pycodestyle line-too-long
    "D203", # pydocstyle one-blank-line-before-class
    "D212", # pydocstyle multi-line-summary-first-line
]
select = [
    "N", # pep8-naming
    "D", # pydocstyle
    "COM", # flake8-commas
    "DJ", # flake8-django
    "LOG", # flake8-logging
    "G", # flake8-logging-format
    "RET", # flake8-return
    "TD", # flake8-todos
    "FIX", # flake8-fixme
    
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # mccabe complexity
    # "DOC", # pydoclint - preview, so disabled for now
    "DTZ", # flake8-datetimez
    "E", # pycodestyle errors
    "EXE", # flake8-executable
    "F", # pyflakes
    "FURB", # refurb
    "I", # isort
    "INT", # flake8-gettext
    "PERF", # perflint
    "PIE", # flake8-pie
    "PLC", # pylint convention
    "PLE", # pylint errors
    "PLR", # pylint refactor
    "PLW", # pylint warnings
    "TRY", # tryceratops
    "FLY", # flynt
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RUF", # ruff-specific rules
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "UP", # pyupgrade
    "W", # pycodestyle warnings
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
forced-separate = ["conftest"]
force-single-line = true

[tool.black]
line-length = 140
target-version = ["py312"]
